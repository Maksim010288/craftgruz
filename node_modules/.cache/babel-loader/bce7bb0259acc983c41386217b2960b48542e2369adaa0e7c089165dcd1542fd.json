{"ast":null,"code":"var _jsxFileName = \"D:\\\\idea\\\\HTML\\\\react\\\\car-list-app\\\\client\\\\src\\\\components\\\\order\\\\Order.jsx\",\n  _s = $RefreshSig$();\nimport { useEffect, useState } from \"react\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function Order() {\n  _s();\n  const [order, setOrders] = useState([]);\n  const orders = () => {\n    fetch(\"/order/get\").then(orders => orders.json()).then(orders => setOrders(orders));\n  };\n  useEffect(() => {\n    order.map(order => {\n      console.log(order);\n    });\n  });\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"order\",\n      children: order.map(order => /*#__PURE__*/_jsxDEV(\"p\", {\n        children: order.name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 9\n    }, this)\n  }, void 0, false);\n}\n_s(Order, \"jrj1gFVZdhuSCydXVQx1aTL2QEI=\");\n_c = Order;\nvar _c;\n$RefreshReg$(_c, \"Order\");","map":{"version":3,"names":["useEffect","useState","jsxDEV","_jsxDEV","Fragment","_Fragment","Order","_s","order","setOrders","orders","fetch","then","json","map","console","log","children","className","name","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["D:/idea/HTML/react/car-list-app/client/src/components/order/Order.jsx"],"sourcesContent":["import {useEffect, useState} from \"react\";\r\n\r\nexport default function Order() {\r\n    const [order, setOrders] = useState([]);\r\n\r\n    const orders = () =>{\r\n        fetch(\"/order/get\")\r\n            .then(orders => orders.json())\r\n            .then(orders => setOrders(orders))\r\n    }\r\n\r\n    useEffect(() => {\r\n        order.map((order) => {\r\n            console.log(order)\r\n        })\r\n    })\r\n\r\n    return(\r\n        <>\r\n        <div className=\"order\">\r\n            {\r\n                order.map((order)=> (\r\n                    <p>{order.name}</p>\r\n                ))\r\n            }\r\n\r\n        </div>\r\n        </>\r\n    )\r\n}"],"mappings":";;AAAA,SAAQA,SAAS,EAAEC,QAAQ,QAAO,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA,EAAAC,QAAA,IAAAC,SAAA;AAE1C,eAAe,SAASC,KAAKA,CAAA,EAAG;EAAAC,EAAA;EAC5B,MAAM,CAACC,KAAK,EAAEC,SAAS,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;EAEvC,MAAMS,MAAM,GAAGA,CAAA,KAAK;IAChBC,KAAK,CAAC,YAAY,CAAC,CACdC,IAAI,CAACF,MAAM,IAAIA,MAAM,CAACG,IAAI,CAAC,CAAC,CAAC,CAC7BD,IAAI,CAACF,MAAM,IAAID,SAAS,CAACC,MAAM,CAAC,CAAC;EAC1C,CAAC;EAEDV,SAAS,CAAC,MAAM;IACZQ,KAAK,CAACM,GAAG,CAAEN,KAAK,IAAK;MACjBO,OAAO,CAACC,GAAG,CAACR,KAAK,CAAC;IACtB,CAAC,CAAC;EACN,CAAC,CAAC;EAEF,oBACIL,OAAA,CAAAE,SAAA;IAAAY,QAAA,eACAd,OAAA;MAAKe,SAAS,EAAC,OAAO;MAAAD,QAAA,EAEdT,KAAK,CAACM,GAAG,CAAEN,KAAK,iBACZL,OAAA;QAAAc,QAAA,EAAIT,KAAK,CAACW;MAAI;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CACrB;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAGL;EAAC,gBACJ,CAAC;AAEX;AAAChB,EAAA,CA3BuBD,KAAK;AAAAkB,EAAA,GAALlB,KAAK;AAAA,IAAAkB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}